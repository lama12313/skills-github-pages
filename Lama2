<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>تقسيم المجموعات</title>
    <style>
        body {
            font-family: 'Cairo', sans-serif;
            text-align: center;
            margin: 50px;
            background-color: #f4f4f4;
            color: #333;
        }
        h1 {
            font-size: 36px;
            margin-bottom: 20px;
            color: #007bff;
        }
        p {
            font-size: 20px;
            margin-bottom: 30px;
        }
        button {
            padding: 15px 30px;
            margin: 10px;
            font-size: 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 8px;
            transition: background-color 0.3s ease;
        }
        button:hover {
            background-color: #0056b3;
        }
        button:disabled {
            background-color: #aaa;
            cursor: not-allowed;
        }
        #reset {
            position: fixed;
            bottom: 10px;
            right: 10px;
            background-color: #ffdddd;
            color: #333;
            padding: 8px 16px;
            font-size: 16px;
            border-radius: 5px;
            opacity: 0.6;
            transition: opacity 0.3s ease;
        }
        #reset:hover {
            opacity: 1;
            background-color: #ffaaaa;
        }
        #result {
            margin-top: 30px;
            font-size: 28px;
            font-weight: bold;
            color: #28a745;
        }
    </style>
    <script>
        const maxCounts = { uncle: { 1: 2, 2: 1, 3: 1 }, aunt: { 1: 2, 2: 2, 3: 2 }, child: { 1: 2, 2: 2, 3: 2 } };
        let groupCounts = { uncle: { 1: 0, 2: 0, 3: 0 }, aunt: { 1: 0, 2: 0, 3: 0 }, child: { 1: 0, 2: 0, 3: 0 } };

        function getRandomGroup(role) {
            let group;
            const availableGroups = Object.keys(maxCounts[role]).filter(g => groupCounts[role][g] < maxCounts[role][g]);
            group = availableGroups[Math.floor(Math.random() * availableGroups.length)];
            groupCounts[role][group]++;
            return group;
        }

        function disableButtons() {
            const buttons = document.querySelectorAll("button.role");
            buttons.forEach(button => button.disabled = true);
        }

        function showGroup(role) {
            const storedGroup = localStorage.getItem("chosenGroup");
            if (storedGroup) {
                document.getElementById("result").textContent = `لقد اخترت مسبقاً ورقم مجموعتك هو: ${storedGroup}`;
                disableButtons();
                return;
            }

            const groupNumber = getRandomGroup(role);
            localStorage.setItem("chosenGroup", groupNumber);
            const resultDiv = document.getElementById("result");
            resultDiv.textContent = `مجموعتك هي: ${groupNumber}`;
            disableButtons();
        }

        function resetGroups() {
            localStorage.removeItem("chosenGroup");
            groupCounts = { uncle: { 1: 0, 2: 0, 3: 0 }, aunt: { 1: 0, 2: 0, 3: 0 }, child: { 1: 0, 2: 0, 3: 0 } };
            const resultDiv = document.getElementById("result");
            resultDiv.textContent = "";
            const buttons = document.querySelectorAll("button");
            buttons.forEach(button => button.disabled = false);
        }
    </script>
</head>
<body>
    <h1>تقسيم المجموعات</h1>
    <p>اضغط على دورك للحصول على رقم مجموعتك:</p>
    <button class="role" onclick="showGroup('uncle')">خوالي</button>
    <button class="role" onclick="showGroup('aunt')">خالاتي</button>
    <button class="role" onclick="showGroup('child')">العيال</button>
    <div id="result"></div>
    <button id="reset" onclick="resetGroups()">إعادة ضبط</button>
</body>
</html>
